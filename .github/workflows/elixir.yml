name: Elixir CI

on: [pull_request]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  asdf:
    name: ASDF
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      # cache the ASDF directory, using the values from .tool-versions
      - name: ASDF cache
        uses: actions/cache@v3
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
        id: asdf-cache
      # only run `asdf install` if we didn't hit the cache
      - uses: asdf-vm/actions/install@v2
        if: steps.asdf-cache.outputs.cache-hit != 'true'
      # only install Hex/Rebar if we didn't hit the cache
      - if: steps.asdf-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force

  build:
    name: Build and test
    runs-on: ubuntu-latest
    needs: asdf
    steps:
      - uses: actions/checkout@v4
      - name: ASDF cache
        uses: actions/cache@v3
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
        id: asdf-cache
      - uses: mbta/actions/reshim-asdf@v1
      # The asdf job should have prepared the cache. exit if it didn't for some reason
      - run: exit 1
        if: steps.asdf-cache.outputs.cache-hit != 'true'
      - name: Restore dependencies cache
        id: deps-cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies (if needed)
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Compile (warnings as errors)
        run: mix compile --force --warnings-as-errors
      - name: Check formatting
        run: mix format --check-formatted
      - name: Run tests
        run: mix test
      - uses: mbta/actions/dialyzer@v2
